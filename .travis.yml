version: ~> 1.0

# require the branch name to be master
if: branch = master

language: python
python:
    - "3.8"
    - "3.9"
    - "3.10"
    - "3.11"
matrix:
    fast_finish: true

arch: arm64
virt: lxd
os: linux
dist: focal
sudo: false

before_install:
    # Python package manager
    - travis_retry wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"; hash -r
    - conda config --set quiet yes --set always_yes yes --set changeps1 no
    - travis_retry conda update -n base -c defaults conda
    - travis_retry conda update --all
    - conda config --set solver libmamba

    # debugging info
    - conda info -a
    - conda list

install:
    # runtime dependencies
    - travis_retry conda create -n test-env
    - eval "$(conda shell.bash hook)"
    - conda activate test-env
    - travis_retry conda install -c conda-forge python=$TRAVIS_PYTHON_VERSION
    - travis_retry conda install -c conda-forge numpy scipy python-igraph h5netcdf
    - travis_retry conda update  -c conda-forge --all

    # testing dependencies
    - travis_retry conda install -c conda-forge tox flake8 pylint pytest-xdist pytest-cov codecov
    - travis_retry conda install -c conda-forge networkx matplotlib cartopy sphinx

    # debugging info
    - conda info -a
    - conda list

before_script:
    # limit parallel processes to available cores (error if pattern not found)
    - sed -i '/nthreads=./{s//nthreads=2/;h}; ${x;/./{x;q0};x;q1}' setup.py
    - sed -i '/-n auto/   {s//-n 2/;      h}; ${x;/./{x;q0};x;q1}' setup.cfg
    - sed -i '/-j ./      {s//-j 2/;      h}; ${x;/./{x;q0};x;q1}' setup.cfg
    - sed -i '/jobs = ./  {s//jobs = 2/;  h}; ${x;/./{x;q0};x;q1}' pyproject.toml

script:
    # package
    - travis_retry pip install -vv -e ".[testing,docs]"

    # test suite
    - tox -v

after_success:
    - codecov

notifications:
    email:
        on_success: change
        on_failure: always
